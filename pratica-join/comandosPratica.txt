SELECT table_name FROM information_schema.tables WHERE table_schema = 'public';
SELECT count(*) FROM pessoa;
SELECT count(*) FROM paciente;
SELECT count(*) FROM medico;
SELECT count(*) FROM consulta;

SELECT id, nome, endereco FROM pessoa LIMIT 20;

ALTER TABLE pessoa
  ADD COLUMN logradouro varchar(255),
  ADD COLUMN numero varchar(20),
  ADD COLUMN complemento varchar(100),
  ADD COLUMN bairro varchar(100),
  ADD COLUMN cidade varchar(100),
  ADD COLUMN uf char(2),
  ADD COLUMN cep varchar(9);

UPDATE pessoa
SET logradouro = split_part(endereco, ',', 1),
    numero = trim(split_part(endereco, ',', 2));

ALTER TABLE pessoa DROP COLUMN endereco;

SELECT nome, logradouro, numero, cidade, uf, cep 
FROM pessoa 
LIMIT 15;

CREATE TABLE especialidade (
  id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  nome varchar(100) NOT NULL UNIQUE
);

INSERT INTO especialidade (nome)
SELECT DISTINCT especialidade FROM medico WHERE especialidade IS NOT NULL;

ALTER TABLE medico ADD COLUMN especialidade_id int;

UPDATE medico m
SET especialidade_id = (
  SELECT id FROM especialidade e WHERE e.nome = m.especialidade
);

ALTER TABLE medico
ADD CONSTRAINT fk_medico_especialidade FOREIGN KEY (especialidade_id)
REFERENCES especialidade(id);

ALTER TABLE medico DROP COLUMN especialidade;

SELECT m.pessoa_id, p.nome, e.nome 
FROM medico m 
JOIN pessoa p 
    ON m.pessoa_id = p.id 
JOIN especialidade e 
    ON m.especialidade_id = e.id;

UPDATE pessoa
SET cpf = regexp_replace(cpf, '[^0-9]', '', 'g');

ALTER TABLE pessoa 
ALTER COLUMN cpf TYPE char(11)
USING lpad(regexp_replace(cpf, '[^0-9]', '', 'g'), 11, '0');

ALTER TABLE pessoa 
ADD CONSTRAINT chk_cpf_formato CHECK (cpf ~ '^[0-9]{11}$');

UPDATE pessoa SET telefone = regexp_replace(telefone, '[^0-9]', '', 'g');
ALTER TABLE pessoa ALTER COLUMN telefone TYPE varchar(15)
USING regexp_replace(telefone, '[^0-9]', '', 'g');

SELECT id, nome, cpf, telefone 
FROM pessoa;

SELECT email, count(*) FROM pessoa GROUP BY email HAVING count(*) > 1;
SELECT * FROM pessoa WHERE email !~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$';

ALTER TABLE pessoa ADD CONSTRAINT uq_pessoa_email UNIQUE (email);
ALTER TABLE pessoa ADD CONSTRAINT chk_email_formato CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$');

ALTER TABLE consulta ADD CONSTRAINT uq_medico_agendamento UNIQUE (medico_id, data_consulta);

SELECT * FROM CONSULTA

INSERT INTO consulta VALUES
(21, 1, 16, '2024-07-01 10:00:00', 'Consulta de rotina');

INSERT INTO consulta VALUES
(21, 3, 8, '2024-07-01 10:00:00', 'Consulta de rotina DUPLICADA');

-- LEFT JOIN
SELECT p.nome, m.crm
FROM medico m
JOIN pessoa p ON m.pessoa_id = p.id
LEFT JOIN consulta c ON m.pessoa_id = c.medico_id
WHERE c.id IS NULL;

-- NOT EXISTS
SELECT p.nome, m.crm
FROM medico m
JOIN pessoa p ON m.pessoa_id = p.id
WHERE NOT EXISTS (
  SELECT 1 FROM consulta c WHERE c.medico_id = m.pessoa_id
);

SELECT p.nome
FROM paciente pa
JOIN pessoa p ON pa.pessoa_id = p.id
WHERE NOT EXISTS (
  SELECT 1
  FROM consulta c
  WHERE c.paciente_id = pa.pessoa_id
);

- `pessoa.cpf` — se o CPF for requisito do sistema
- `pessoa.data_nascimento` — importante para cálculo de idade e regras do plano
- `paciente.numero_cartao` — `NOT NULL` e `UNIQUE` (identificação do beneficiário)
- `medico.crm` — `NOT NULL` e `UNIQUE` (identificação profissional)

ALTER TABLE paciente ALTER COLUMN numero_cartao SET NOT NULL;
ALTER TABLE paciente ADD CONSTRAINT uq_paciente_numero_cartao UNIQUE (numero_cartao);
ALTER TABLE medico ALTER COLUMN crm SET NOT NULL;
ALTER TABLE medico ADD CONSTRAINT uq_medico_crm UNIQUE (crm);
ALTER TABLE pessoa ALTER COLUMN data_nascimento SET NOT NULL;
ALTER TABLE pessoa ALTER COLUMN cpf SET NOT NULL;

SELECT id, cpf 
FROM pessoa 
WHERE length(regexp_replace(cpf, '[^0-9]', '', 'g')) != 11;

SELECT regexp_replace(cpf, '[^0-9]', '', 'g') as cpf_clean, count(*)
FROM pessoa 
GROUP BY cpf_clean 
HAVING count(*) > 1;

SELECT email, count(*) 
FROM pessoa 
GROUP BY email 
HAVING count(*) > 1;

SELECT id, telefone 
FROM pessoa 
WHERE telefone 
IS NULL 
OR length(telefone) > 15;

SELECT count(*) FROM paciente;
SELECT count(*) FROM consulta;

SELECT * FROM pessoa;
SELECT * FROM medico;
SELECT * FROM consulta;

--INSERINDO CONSULTA VALIDA
INSERT INTO consulta (id, paciente_id, medico_id, data_consulta, observacoes)
VALUES (23, 11, 18, '2024-07-01 10:00:00', 'Consulta 1 Mesmo Medico, Mesma Data');